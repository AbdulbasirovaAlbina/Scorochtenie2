package com.example.scorochtenie2

import android.content.Context
import android.content.Intent
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView

data class ModernTechniqueItem(
    val title: String,
    val iconResId: Int,
    val progress: Int = 0 // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
)

class ModernTechniqueAdapter(private val techniques: List<ModernTechniqueItem>) :
    RecyclerView.Adapter<ModernTechniqueAdapter.ModernTechniqueViewHolder>() {

    private lateinit var context: Context

    class ModernTechniqueViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val icon: ImageView = itemView.findViewById(R.id.technique_icon)
        val title: TextView = itemView.findViewById(R.id.technique_title)
        val progressText: TextView = itemView.findViewById(R.id.progress_text)
        val progressBar: View = itemView.findViewById(R.id.technique_progress_bar)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ModernTechniqueViewHolder {
        context = parent.context
        val view = LayoutInflater.from(context).inflate(R.layout.item_technique_modern, parent, false)
        return ModernTechniqueViewHolder(view)
    }

    override fun onBindViewHolder(holder: ModernTechniqueViewHolder, position: Int) {
        val technique = techniques[position]
        holder.icon.setImageResource(technique.iconResId)

        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Å–ª–æ–≤–∞
        val words = technique.title.split(" ")
        // –ï—Å–ª–∏ —Ä–æ–≤–Ω–æ –¥–≤–∞ —Å–ª–æ–≤–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
        holder.title.text = if (words.size == 2) {
            words.joinToString("\n")
        } else {
            technique.title
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–∏
        val stats = TestResultManager.getTechniqueStats(context, technique.title)
        val completedTexts = stats.uniqueTextsCount // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
        val totalTexts = 9 // –£ –∫–∞–∂–¥–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ —Ç–µ–ø–µ—Ä—å 9 —Ç–µ–∫—Å—Ç–æ–≤
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∏–∑ 9
        holder.progressText.text = "$completedTexts/$totalTexts"
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —à–∫–∞–ª—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–º–∞–∫—Å–∏–º—É–º 9 —Ç–µ–∫—Å—Ç–æ–≤)
        val progressPercent = (completedTexts.toFloat() / totalTexts).coerceAtMost(1.0f)
        holder.progressBar.post {
            val width = (holder.progressBar.parent as View).width
            val progressWidth = (width * progressPercent).toInt()
            holder.progressBar.layoutParams.width = progressWidth
            holder.progressBar.requestLayout()
        }

        holder.itemView.setOnClickListener {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ —Ç–µ—Ö–Ω–∏–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é (9/9)
            if (TestResultManager.isTechniqueFullyCompleted(context, technique.title)) {
                // –¢–µ—Ö–Ω–∏–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ—Å—Ç
                android.widget.Toast.makeText(
                    context,
                    "üéâ –¢–µ—Ö–Ω–∏–∫–∞ \"${technique.title}\" –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å–≤–æ–µ–Ω–∞! –í—Å–µ —Ç–µ–∫—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã –Ω–∞ 100%",
                    android.widget.Toast.LENGTH_LONG
                ).show()
            } else {
                // –¢–µ—Ö–Ω–∏–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                val intent = Intent(context, TechniqueSettingsActivity::class.java)
                intent.putExtra("technique_name", technique.title)
                context.startActivity(intent)
            }
        }
    }

    override fun getItemCount(): Int = techniques.size
}